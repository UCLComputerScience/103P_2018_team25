# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-03-23 12:59
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('module_code', models.CharField(help_text='UCL Module Code eg. COMP101P', max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_title', models.CharField(help_text='A question or problem', max_length=200)),
                ('project_background', models.CharField(help_text='Description of your company and its background', max_length=500)),
                ('project_objectives', models.CharField(help_text='One line version of the project objectives', max_length=500)),
                ('project_description', models.CharField(help_text='Details of the project', max_length=500)),
                ('project_dataset', models.CharField(help_text='Descriptions of the dataset to be used', max_length=500)),
                ('project_resources', models.CharField(help_text='Any additional resources that might be of interest', max_length=500)),
                ('project_mentors', models.CharField(help_text='Names of mentors', max_length=500)),
                ('project_due_date', models.DateField(help_text='The date the project must be completed by')),
                ('project_complexity', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1, help_text='Rating of the project difficulty from 1 to 5', validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('project_valid', models.BooleanField(default=False, help_text='Is the project suitable for matching')),
                ('project_module', models.ForeignKey(help_text='The module the project is to be matched with', null=True, on_delete=django.db.models.deletion.CASCADE, to='matchingsystem.Module')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_code', models.CharField(help_text='UCL Student Number', max_length=10, primary_key=True, serialize=False)),
                ('forename', models.CharField(help_text='Student Forename', max_length=100)),
                ('surname', models.CharField(help_text='Student Surname', max_length=100)),
                ('email', models.CharField(help_text='Student Email', max_length=100)),
                ('previous_leader', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3')], default=0, help_text='Number of previous team leader roles', validators=[django.core.validators.MaxValueValidator(3), django.core.validators.MinValueValidator(0)])),
                ('exam_results', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Combined previous results as a percentage', max_digits=5, validators=[django.core.validators.MaxValueValidator(100)])),
                ('student_modules', models.ManyToManyField(help_text='Modules the student is enrolled in', to='matchingsystem.Module')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_description', models.CharField(help_text='A high level descriptor for a project eg. Web App', max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='tag_dislike_1',
            field=models.ForeignKey(help_text="Student's Least Preference", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_dislike_1', to='matchingsystem.Tag'),
        ),
        migrations.AddField(
            model_name='student',
            name='tag_like_1',
            field=models.ForeignKey(help_text="Student's First Preference", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_like_1', to='matchingsystem.Tag'),
        ),
        migrations.AddField(
            model_name='student',
            name='tag_like_2',
            field=models.ForeignKey(help_text="Student's Second Preference", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_like_2', to='matchingsystem.Tag'),
        ),
        migrations.AddField(
            model_name='student',
            name='tag_like_3',
            field=models.ForeignKey(help_text="Student's Third Preference", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_like_3', to='matchingsystem.Tag'),
        ),
        migrations.AddField(
            model_name='project',
            name='project_tags',
            field=models.ManyToManyField(help_text='The descriptors of the project', to='matchingsystem.Tag'),
        ),
        migrations.AddField(
            model_name='project',
            name='project_user',
            field=models.ForeignKey(help_text='The client who created the project', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_user', to=settings.AUTH_USER_MODEL),
        ),
    ]
